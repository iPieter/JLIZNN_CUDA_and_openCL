%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.3 (Build 17D102) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 434 358
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 434 358
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: RDDONJ+Helvetica
%!FontType1-1.0: RDDONJ+Helvetica 1.0000.0.0000
14 dict begin/FontName /RDDONJ+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /G put
dup 34 /P put
dup 35 /U put
dup 36 /slash put
dup 37 /C put
dup 38 /space put
dup 39 /bracketleft put
dup 40 /percent put
dup 41 /bracketright put
dup 42 /zero put
dup 43 /one put
dup 44 /two put
dup 45 /three put
dup 46 /four put
dup 47 /five put
dup 48 /six put
dup 49 /seven put
dup 50 /eight put
dup 51 /nine put
dup 52 /z put
dup 53 /e put
dup 54 /b put
dup 55 /r put
dup 56 /a put
dup 57 /period put
dup 58 /j put
dup 59 /p put
dup 60 /g put
dup 61 /o put
dup 62 /t put
dup 63 /i put
dup 64 /v put
dup 65 /n put
dup 66 /s put
dup 67 /c put
dup 68 /h put
dup 69 /l put
dup 70 /m put
dup 71 /w put
dup 72 /d put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<











1C18152D142E280F0B6908262536250225220D0A042B1318C61C1D1307041D2E9A2B0B2F07090E100207002F212F1A1F18161827173E28260727281A310E1F27103E00272E193031B221A65D182B2B4EF44DEDF4FD394E10F64DFD3910F4FD3911123939392F111239113939003F3FEDED3FEDED111217397131304379404C012D022615251A26210E1F21000926072101032C002100052A0721011D121F21001B14182101200F22210021220E0D08270A21012625090A012D04210006290421001E111C210119161C2101002B2B2B2B103C103C2B103C103C2B012B2B2B2B2B2B2B2B2B81005D5D015D13161716333236353427262F01262726353436333217160723262726232206151417161F011617161514062322262701EF082544A864983D27738F894174DBB9F26B4302AA05263E99666945284E77C24269D9DEEFC70701B701505A3057575B4524161D24222A498198BC8E5A683D32474E40462A19131D2F2C45948FD0D9A002F900010017FFEF0209055A00180052B50D2E0AC00E01B8013F40250416391703060E0A111A17171A0301062900150E150F031F030203FC1619191AFC21677D182B2B4EF44DFD5D39C42F3CFD3C104E456544E6002F3F3F3C4DFD3CED10FDE431301333113315231114171633323637150E012322263511233533A8B6ABAB2615310D1E141F43277E5A9191055AFED593FD4538130B01028E0908816702C59300000001000B000003EA042F00060102402E4201C5010200670068026803670687048805A700A802084700480245044A0586048905C704C80508492873280708B80109B321677E182B2B4B5279B8FF70B40105042004B80183B703036D1202010205B80183401E06066D120000010506040301010502030603000605040A0817171A03AF02BA018400000184B301AF0619194EF4184DFDE0E0FD194E456544E618003F3C3F173C1239011112391239074D2E2B104EE44D072E2B104EE44D2B4B51794025022912030304002912060605010502030603000605040A0817171A020403AF050001AF0619194EF4184DFD3939FD3939194E456544E618003F3C3F173C12390507102B07102B313001715D005D7113090133012301DC011E012BC5FE6CC0FE75042FFC980368FBD1042F00010012000005A1042F000C0120407E4704AA09028E09014607490B87038A08850ACA02C403C607C908C60AC90B0B66076A08650A690B76077908760A790B85078A0B0A4607490B0247037700780503572816282B012B043B013B048F018F0406090401030B020305060C050006080A0B03070A0E17171A0705069B080304C40A0209C40B00019B0C190D677E182B194E10F4184DFD3939FD3939FD3939FD3939194E456544E618003F173C3F173C1217395D4B5179400C0529120607060029120C0C0B0587102B
87102B4B5279B4090A09080AB8018B401312010102070604050529120606070908090A08B8018B400E120404030B0C00010029120C0C0B01874D2E2B87107DC41805872E182B087D10C505872E182B877D10C405872E182B087D10C53130015D71717100715D1B02331B013301230B012301D7CED1CAD2DBB4FEC9BBDAD3BBFECB042FFCB4034CFCB90347FBD1033DFCC3042F0000020034000003B404490009000A006C4042370648005700580157066700680167067705090105060629120000010A0A01060503050102390403060007063908090A0A07053E071A0C034A00190B0CB221725D182B2B4EF44DE44E10F64DE4003F3F3CFD3C393F3CFD3C390111123939392F872E2B877DC53130015D370121352115012115210134027BFDB4033EFD89028AFC8001CF8E0300A193FD05A104490002002F0000044205930007000B00001335211521112311013521152F0413FE4FB2FE50041303A6A8A8FC5A03A60146A7A700000001000000000000D5411B0D5F0F3CF500110800000000005F4D8F0000000000D5670BEEF865FC270B9108F9000000090001000000000000000100000629FE2900000C01F865FCED0B9100010000000000000000000000000000002A0512004202390000071D0042023900AF0239000004730040047300C4047300400473003104730034047300420473004D0473004B047300420473004905C7005A06390063055600AF05C700AA023900800239002F04730052047300760400003B04730038047300480473003D0473008401C7008401C7FFDA01C7008906AA0084047300840473003B0473007602AA008904000042023900170400000B05C70012040000340473002F00000036003600FE011E014201B001D60262030E035C03F0048604D00582061806A8075007A607EE081A084C091609800A020A6E0B380BE00C300C5E0C980CBA0D360D920E0A0E7C0EC20FA20FF210881136118611A0000000010000002A00920009006B0007000200100010005D000007E80A1D00040001B800532BB800492BB8003F2BB800352BB8002B2B4118008001A6009001A600A001A600030069018B0079018B0089018B0099018B00040089018B0099018B00A9018B00B9018BB2040840BA0179001A014A400B041F5414191F180A0B1FD2B80106B49E1FD918E3BB0119000D00E10119B20D0009410A01A0019F0064001F01A50025017A00480028019AB3296C1F60410A01A9007001A9008001A90003008001A9000101A9B21E321FBE012C00250401001F0126001E0401B61FE7312D1FE531B80201B21FC227B80401B21FC11EB80201400F1FC01D9E1FBF1D671FBE1D671FAB27B80401B21FAA29B80401B61FA91D6C1F931EB8019AB21F921DB80101B21F911DB80101B21F751DB80201B61F6D29961F6431B8019AB21F4C96B8
02ABB21F391DB80156400B1F3638211F351DE41F2F27B80801400B1F2D1D4C1F2A31CD1F241DB802ABB21F201EB8012540111F1C1D931F3A1D4C1F1E1D45273A1D4527BB01AA019B002A019BB2254A1FBA019B0025017AB349293896B8017BB348283125B8017A403648289629482725294C1F252946272729482756C80784075B07410732072B072807260721071B071408120810080E080C080A08080807B801ACB23F1F06BB01AB003F001F01ABB308060805B801AEB23F1F04BB01AD003F001F01ADB70804080208000814B8FFE0B40000010014B801ABB41000000100B801ABB606100000010006B801ADB300000100B801AD401F04000001000410000001001002000001000200000001000002010802004A00B0018DB806008516763F183F123E113946443E113946443E113946443E113946443E113946443E11394660443E11394660443E11394660442B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B18011DB0964B5358B0AA1D59B0324B5358B0FF1D592B2B2B2B2B2B2B2B182B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B74752B2B2B65422B2B4B5279B376706A66456523456023456560234560B08B766818B080622020B16A704565234520B003266062636820B003266165B070236544B06A234420B176664565234520B003266062636820B003266165B066236544B0762344B10066455458B166406544B27640764523614459B36242725D456523456023456560234560B089766818B080622020B172424565234520B003266062636820B003266165B042236544B072234420B1625D4565234520B003266062636820B003266165B05D236544B0622344B1005D455458B15D406544B262406245236144592B2B2B2B456953427374B8019A2045694B20B02853B049515A58B020615944B801A6204569447500
00>] def
/CharStrings 42 dict dup begin
/.notdef 0 def
/space 1 def
/percent 2 def
/period 3 def
/slash 4 def
/zero 5 def
/one 6 def
/two 7 def
/three 8 def
/four 9 def
/five 10 def
/six 11 def
/seven 12 def
/eight 13 def
/nine 14 def
/C 15 def
/G 16 def
/P 17 def
/U 18 def
/bracketleft 19 def
/bracketright 20 def
/a 21 def
/b 22 def
/c 23 def
/d 24 def
/e 25 def
/g 26 def
/h 27 def
/i 28 def
/j 29 def
/l 30 def
/m 31 def
/n 32 def
/o 33 def
/p 34 def
/r 35 def
/s 36 def
/t 37 def
/v 38 def
/w 39 def
/z 40 def
/u20B8 41 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4072461 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C94DD8F68E7C9E6CE89571C79E22E977A5B42C931CC2176483889C4D7EEAFFE17289B6371802E39DA8C0488C09EC36ED5185081CC3FA32D3A866773FF647D80638190E3675481C905C73D876CCB3E6EC070D0C4648B0DE04AF01428E317A62163E75946CA8A2DE0A5758426D3698328738B89CFB8EE17E691F8E4D5C3D229D20B2C9F5D047CC7522B893D01F395704C87571A85ADC079D1605F7A3A16EAF34CB44AE3DD146AE98F6D0BB500440DECB4CBAFDD0E6D071B97729DC536E19C674182862FFEE40F12E456A096624505A44FA0577324036DC6DCB8B7692009CFFCFEED67330A26D3E5837A4A160206F99246FE11822D7EB90D4080083A7AD4826E5DBCB418F45ECEA1FD19E48ABC602666E951316C76E3CF2725CA482FE46FBAC6140F32E03BC62D6A77C0DC414AED26297F691F072049B31D20768C782FA69DB76BC6B4C15279CE8BC1CD94112DE2C425917B090B6B9EEFA98B19A367AC0000A5D4AEAC679D8ACB6A37F7456B10F819DF8072804302E9DF544F4FDF9A9BB966212C6ACF5D22E305A3C9E6BE76D57F6985C9AE1EBDCA3EC38F024706A7BF54AAFD9F00E3FA00B4429B8A3ACFD7BADE6085CF2DED048F2E044160245A66E626552321D79EE49EE60B3A96A31E4FB369513448A918A74A207FFD7A5882396F6927351C077C20E51D3776E7FAFA17E0C87684861F6529399BB864903D88B2CFAFF248E8149B024635FE315B7097E134C300109720EE1E5CB5453AA3B6DF7FDF356EDF6F65FB
4B9D67A33520CE99C08B1A7618A8F9B0711E1207C3246C7C462E0A7EA23B8174742964B44E33A8E9256B1C07A6DFFC861D5F5CC749E6C35F907218F5A1783343E1BBA27020C563A84B684B3F629CFA800CB95FBC5FC036F11D6EF9E740F855CA5DC48662454A9BA1B052790492CAA6C2475729B92BE8FCD38C0106CE32ED653F030D689775800CC69C4BF4F170301EBD6DCFB529C5EAB589B8A761CD3410F2C9056A32F36C19F6369E124BC2D6901385B29BAB37BE2D95BB923BAD7E8CC685814C8969324AA5B1AD81938B879EE50EF6A1E75231E643AD183FFD3C2CF57F95F335569288802B28E916490B6376046B08F23C0AFD87FB9B13E94993E0788EA569DDC167991496448C7F2E0BD80A42F5602900399BEB1864BD7E61DB022E23C4FB95BD4614D98850AE08EBA7362B0AD092A5F576D715317D07A0FE52CC94DC6DA9E09C647BDB31D2B7F34472AA480AC604D2D70B1C743C0AA84864C41EB39A7E10B4691ED4684131643A4154A567541AEF68B6FA9187F4D7AEE56286E43E3298D4BD36803BC83ADF5CD0269333C17D067E0E091EEAD7AF09202F0F611CE262CE32040B57B8ED1B41E31554B7261BAFBDE8B3295E4FA93641A057FDF3D7C29C2C8196942AFC93B52A3279864A5DEFD915D1C82DB63BCEE25CBB5D91F382B4549E243011DCB9AAA729590E41CF4086B4E103551EE0FB13DC400BCE0EF3911044598F0E2A8847205E304A220671BE5C1405C1B8A2EC340EEA15327BAB2C1C0B83E7122A4823F45664724622A1F14A062E2708BA7E60C16B4E8EFF326CFA07F66A7558439931EDC202A9EAAD1BD25E1F2D46F32D6B9403BCE3505B764FB74C7808606C3482477983F3422DBD0185DF316E952A35DE05C5434FD5C27CAD3653A17950E1137EBF3AC9765347C51B1949F399844D8819CD165C54F35C9E8E848C9CD2E7C2D1BB2FCFE62C6A09FE314E2A857A53EA669BAECB260873842081697D9E63AE7F643FA0E07748CFECB27290C1FF3579765339FE73C1FEFF6F475D2E8EBA5E94086BD4538421102CD9DDC9239C955F1F5B9BA00394760A3653C6819C4777632574B37C3889768ACA67F8E0554BF2002473716D626AA2A7BC64DA3C6BC1704AC205DE9763B9885B7DE204D4346B120888C7886C803407679E89C24FC8297985F243904360B87EB0BF8F087AB8892E5E21C282BB43DF6844EFBD4793C0E001722C9DD090228C61875269C66639EA74645A115801BE66EAB627AE30DE472733FA4B139FBA8861C50CF0DC0340978182460C2A9DF058FA536D75E553FA3B24F830A4FE0F2B85FE4902FEC2819E7FF67E9D091EDF50D10661FEBAA0B88A860037F536782D70B7C7733E77EEA965989BCC13257E79ED38B20684BB9FE24AB4B84C3B462A117008AD105142DA5B4CE62F6AE1CED5A99393B6293A2B4B48721AC96B611BD3
CBEDC07246048E60D672B243A22DB0B122697E2897660E77257882B6FC23D27CE1D39EBA83B87F85E740FFEF2C77E005A9B5436370102B0E6D84BFF65C1EA43C220D319445080F4B1D280AB2F2D26ED4D035CE35478EAB8C119B393A5DC6CD79848A8CA172B38FD387AA1FB7A95009DE7766846695B8AA78309C72BFF59C1A6D8FE37DA45EA190E1B7B90EC94E37C470FB5FD26ADD169221F95751CECBCA0DF28BD1EF22F2776C146C4AA6C8C921C38BAD0A84797668C9296056DE1ACED128B81F080DCF0F01C9D735E159E07CCA8BE5DB92BCE9A13B1591B65C57ACCA47A99D680F0C2A4B56502613899C5F0C7ECDB8BA9042FA22CB4D35E225F35C28EA202B07F71F59388F03DA3E2725CCCE7001E810D93E2CB214E9E485C06A9766ECFBC3915DEA16927B0E25D2411EB1E1B09063D88FBF2ED7D51AE1671148DD6B51B833B652BAB84145BC5B81C57BE2463E645EE70D8891548FC7A8097599EC10C255FFE02C9C70F42674C27CAEDD1B8B77784DAD1B5391DB2B0220114C49A8D1FB3AA466543CDB3EF3BB607579F324F149351050EB4B87B6494DB4490385980C5D6168ED98083162AB1EDFF5954F3F270D4368E7D1BCFF9267B93A25CD6B6E0064BD480E641D6E40BA8C1DC9C8ECAABF7E259389BADEA755BF8D5D7E5BB913049790B37E7FA97671F18E2740291AF3EE0C7D5750CD74DBED16949ADF2F6A1F6721893A3D2960B4CA616D5F0FD13E341D2F466350D481CB7A2C8B7A2F759ADAA7AE648772B59797F0BF67F89AABFA7CB4F632D2DA79485B46253E9590F86F16EB8A70B129987DC10E21A5C0B3A05835B9A4D32CA0219A2D18AC828849A6D16C11D1DEAAC070707945CE613490D3BD19E2E04A1D294FEB3AAB99CB6AC17C056927A4FF6AD8A7C4CBEE4AD8867B36C02A8F0B632990CD44392EF97581CED3C6899743E75018D53B70256326D09ACD864E5B38923C0F00F6B49F269D8BD16162881D6CA3AE6AA29295ED03D70053F11D41BCB8D5DBE9898F6976E469E872DFD4540EE4739F6760044027D1043745296184E71DB3D4B0BAD9B7A677F453A8DC4C3682D8959305C3748138E839ED01785ED5D4533F1327F36051D2F5D957FDCA7C465488DCF8F70C3413D193416BCAD6F7204EFA9233D917890FA70745C0E91A14E150518B59179353BED08F293F6932424C5C5005BA2D54057E9EB2396131B726B7BEE31E09B24A44ED34BE7AFA6004BBE167FDEC32EE4D183EF8D0FDD65EC94E36DA2B6660B7259D35C49A00A586547417D024C5D87A2A94971430AE9CCEBE4C291ABB96E5F52A910E53A2C7B4131B2B8E06573D20B793916A057C5DF84C5E7D8B31F485D930227BFC2AAC5481A4D4C6FDD36ED824B538B15C6A89AA32C11926BDC48393311DA45F4F873E9BF50BDF009BA74D1A16E6FC59E2EDA8FEA04D510DECB9BC7B33
6979680CBBB7B33FC6F8C67920C4C40220BE1EAFFE679B3980E1685A1B4456E9F0FB3034102A7C39A73CBAEBFA852F5B0F3CF10157DC1D6F9DE38D4F4FE79FFA06551BA57E5AD5DA3CD15C8F8D3E3CFC4499E57F09A9D52E3BEB24791131BC8E75FFA5330C4774EC40ADAF8F059EE251D5887420AF9B0F4D7244A9F9A0D25A3A919C64C0CF2287073ACFECA753224589BBDBD8027F7F3C400F87226BC186464CA097D1D85BA96080989ABB4704A9AAFF0C19012173CE227071F7C97837350628332A2936EC815ADE39B2E88E724CA953DE4E1A42497B69E1BC7F9F0B568C103729FF24C8707C0A88B020142C3BC2A6DAB80FD9B53B2E17E8E44330A35E7A446FF314754A241DCF5D332716F34BC7F1F865A2793754946E0809E40B8811E88F9E9855061CBE679C11B1C26A798065A79E4183FA9FF90EA363875FC5740FB9C6EDFBF8AD716F47C37DC882C137BF19566E23169A287623A20C5137647EC738CF9E5E6766455979975337BB07323F172D026B7C458C7EB2560110B4F44F1336481749ECD95203DDBC648A2F09AD1DA3AE0EA51D5A888791668D365D34CED1790BD6DF340C45675CC70F03AB0F501729F71D5D96FB5BC72F52C044C05117BF95472E85CAEED681E07D5B8CB591F58B62B7CB9F86F564979BDAB7BBCFFE2382023C1A12666E5BB55843C7882C845869D06B35D6AFDFBBCB6A05CE9836F111FD559B40F3BC9FD3FE208A3345AFE1D3542775F1C1903C8334BE2983EB7BF1B7B2075E665F0A94F0844B77B51A74200A5FF198A3E54FF53D31A7062238567061B05863407F69CE1AE8620D24B46801B9AC492F17D1922CBA29055740A7199167A094600C6E242F180DFDDC2FE5204CCA4EB30E3BD17F657FD655F054BB7A49C8972B1CE821A96AF7CC2340B3ECB4D617217F23D9CB579DB28D94E006835DC9D867D624F57FE1EA6E6A9A646981DB45E22D948AFAD637EF372B7E595A10E572984C94FEDB101A625A5252F6E7FE768C5F07BAA2457D05DB41B2D5BF0D8C2D1A41DDA6830213F8211C145AF098E250B87A5F4F9B4FD10F65A2D2480FCF758393FDC1F2F0D661CA2A599F7704D08499F91194F52AD8F6963A39E0A5581DA2AAFDAFDE3748F3DE2DBD453DC3AEB7D38DCB4C9F8FC88E7E9714B9EC92FE4823C5EE0BB1CFC95300934C31EF43F4288859ABFB038ABEE6DE8EE9743A6C6BF781F49676129857DB3CE1D9D3FF1E6548FE5E20DAF30A1D7AD12947615CE25CCEBF5257E44F45BB56862469C5050BD082A21B195C17ACBA0BA8BCB9BF42E98980098EDB3A25A5321F41BA170C5558CE7A53589378818D18937CB4BFE859A035B7989B17034EE67AB92D566C156A31F46D45496AA779625493C50A3227CBDCAC2E8F22C802C6AD0E8BF03F75B4D46012DA80ED9BE0CA31A1F5B3BAB854F144937FC753A91FE5A22E33
6384F7003EB71530777B18D1A3D8223F69B7CE6A1A4EE50D84B42026F372E55D7FB7C00737F7CDB3C0E5BFDCB48BFB1FE29538EEAEFA8004B63276A4C7A00ECC38B1FE1ADD148E2C59B6E9619F00D79C2C7634D1183612B07C1AD7A8357C0A58B9EC0D4CC41E07DBACA43E85972568BFDAED4A915560A1DE22CF9973576AC4F088082CD54B220778F0A832349F2C6457CF45BF052FEE1092455E74BD684372FFEB73DE120B73BF16AB823AFE3828309DF808D161BA218F0F2A70646719157E03E4811A08F36FDC6E79681A91CE45D9793F77D6ABB342C0DA9B7F7FE3329FE186C7E3E555990DB6D3ECC82320BAB7446E64F9860CBBB97BA2E8C51A2812A79FC44C5F4239EC57335BEF33772AB57DF010113A03F0C2F974293A84E7855E538321CD708690250D5CC30AA6E93257EF6705F28E59662A6518D7CD839FD75956435EDA1E53E52AA9090551CC172A5968906E9698093CCC16276BB6CD42CD591A93EFA41564F043E99C408663C05B49BE44011F08E264DBD693B39271FD5CED7B3FA972C09364A5F3B42DD610F8E76E4A6E51A9244CE01121C44E0414E3BD04ECE68F93A1492F55231371616887A99766191975A165B03C7DDBD609702AA70F6B6F0FF6E39C3B36BB39387EC2411B680026143180833041B06F11CA6A6437B8FB63E77BDE4B080014EC3DC547E275C27165DD4AAC1C3510F0E8473FCD05BD93BACBC5E09B614533BB6B7DACD97EF29B0B84CB8980EF0601A5D35BD6AB81C47A564407CF9B6DE0C058BFED5C81998B0CA2DCA28E6E8156075FAAAB94229BCFAA27D649F0CE478D091DFD21DA2E56EA066DD27A8779DDA38FDA5AE290D70021B781344616AA823CD2EA3012B98B5F32FDA584B88EC6595B893F6D4C07E2891DDD47EEC954E1DF29A9787E73A04A192C9025E68DA71033EF68B9E673ACB889887A0E98CEA926897EA6E293CE511B2B94F2794192CF038F1F8BACF58FD69B4ADF59FB50555409A29D36E0E5F9844498F6FFCBA3392D3E6DE1C7A584FBB3AE702ABD80599F9A735D47C879AA21AB8C06B099D9A8943E958E7EA5B37B377FDAEB704D13D5FAD95F08024D08887CB3DCA3DA749E89598C8ECBBD5088FDB901233FCFACFEFDFA6BCF851F13F696EB582F3620C76CDD6603FFB38AECDB674894AF5A56D06ADACB272F4A4044B7302B49B6CDD9561998A649D93F0D38C051DB8E76392B563DEAF4BFA05F61250B43E37463585F86FB99F19E8C3DE7902E05B8540995EB41700324A80903A7CAF6B593D4A39A88E83764BB5E094A92D7B6EC4D3FAE0E16604CB7832D6236E693892E98DA276E6BE6430B432D694AF43F40D1AFEB6BED81C5F5428BEA81A43676F278050D082B483500330E4362C5DA0A5C6A4A32BF8F0CEFA058E70F4A77ECA4CB801439CB5BF8A70910C5CA480D7B1B872E972E9C6228798C0AB9
08149FB3056E2C7A65863997B21EC40DD5B23ECE52C37E10932E0A9F7144D0F60DDBF1068D72911F95F2ADAC86B5E9DE88D718BBE7E711CD13ED659D97C87849372832D9E076BC6102B669A75AA747E0044CCD5C1C6DBB62EDDC5705F40AE55581E8A01CD24D78B4C0874AF1D4D059C3638578B3DF47E1A2B90B4E316F9C8B666AE7E8BEE213C41C25E62ACE09A4160F7AAD1D77C25D08C4A15F2D662E0F6207B001AB981E78DDF530AE48AD7A41AC3592CF36FF1D04EAB2A18ADC93D789CB8F9AF18DC84B34557CE9287281ADFD6EAE54C740F11094DCBD5E98DA8E1E2D57DE82082CEFB5E2FEC7D9C3D766ADB81C3813FAE63ADFD7EA84DB3A457C9F7D404A90A9D777CAB2692D9E23C9FB46FD2AB47A12E04376F0E6212797BB8F3F56D2A2AF46CCAFA89A371E7DC496B01E61609E9FE2B2EBC22488750B5A53C9CFB57304CA6ABDF62914620F2D11FEE1AF3565963E53C85DB550E8C645624EA66251D4C72D416E4AA87D22C83C76125F4C3C8D25B8B4EB9644E5729AF86E4B4B1E52A395054926B5CE12ECCEE4275895B0682F1A3A46A6F80170B0E7D561F60D6B05405CE2201E430F9E6FED8E5BA50DF099B3F78EE37205F8AB0AAC1E79E5F6EFAD0C053EA716941A7C9BD20B12C77F4CF327BBB36B4DF3ABE253786E71615132C66059938F602F92C0F7205409A900FF7CC5765640CB82A05DB9DB58AB28893114F648D1D82856836E985E590CD961EFBE02828DD79F022FF24D655F61CB1CD8481D21D1C60733C736D5D971EDAD0D237D47F9B3A4F7D59F9D2C21C826E9AEB10DF854F94E384CE9658F07A3ECAE94061A955819B62520C02B03F7F71DBFFBFD63879DCA19F5091D3875C4DEDB2CABFA79652070DE23C49507C2DC637BCC2B44BAC9C6AE6EAE04AF0E6BE30722E58BA6FF257175363CE879405D972B1E73A446E39652F5AD33D36AB104734CA7AB188A234C5042FDCDFEE621CD40A7CBA4412612E59E42EDA4EDBF0C3EF636B15CC54626C9D51EAABF9D715AE1A5054F1D6605CE91F5BD2F3027999173526638F8FBEE02BF3131C669BBB7C07F1AFD6D64EB36B76CB6103D127089A0CC7C5F63318DD86BD4AF1F811480074084EED52663DC58D56122D777F8C35093D776679E8255ABAEA8AB53E21F387BCC238CABD97167110B550567583630CDE6345C36F21C6C4CCD04BF083728D1DD59FC510DEF59BAE3CD59DB00F2778AB59AE820153A9EFB9C8CFE0374EB257802D8EC9AE9B50CFB6EC0A60E8ADD87CCAFAA618CF71F2E3D14B642DA84D4C6288B868E0B35D291E50A504D6850393310AC9F98178933FCC45A80E67E0CDFA9B441E226B391E75F86CC4DDEFC996CEF533A3CE5CA19F89FCD67EA75B225D6FBCC2D5407FA5102C440E2978A0FCEE29A868FECA8850C16358EA0BB20665D9F2B26FB48CDF25249AB48A06384A7
79FD06052E0BA15982594A3E155C96A3C0704446C56F8F549098FA6FB407797221D92F9E08A66C42D73AE40B3AF03EF971ABDBC30D4970647D400B50E7ECFA15E7E8B7FCEBC93D7A0DC677B9FDFE6C10B2D56172993BF275E2A6E5A80F75C481E69ACC3918F23FCCA473E537801435AFDD68508A2D249F3A2EED573D51D1F0816DFCE55644DD95D126605DD7F2C617EDB954C4939EFC46E8371303AA00298E10A2BDE15EB4D8A2689D4BEC82CBB8E51A6B2760DD88A271DF47DC9FF5A75858E3CB8C34E05363CA13CB04498AC5133A02DA01D6471977559B4BF173518E6AF07C706D01C6C70AF2511C5B2E8F57CC3CC34411FA980AAADC3D496F16148AF7ACB799BCAD4124639A958C2CF744BFC44FBB30EBEC39D44524869C371C1D18CE31005724E14B4DB6824D33C6F9EA06A3EBB45EF5481A8F358BE8F18D25CED05462930E9031553D3B5A57DBF0C5D20973179BA96046558BED39431248B0202E53FD89F4C18720D80641472999A6CE88CB3563211D2E4CFEA2014698A10F5EF8C35A2ADA38C24551FF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/RDDONJ+Helvetica cguidfix
/F1.1/RDDONJ+Helvetica renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.5 w
1 J
[
0.0093198288
3.7279315
] 0.0046599144 d
/Cs1 SC
0 sc
q
50.0709 26 368.3291 313.92911 rc
86.903809 26 m
86.903809 339.92911 l
234.23544 26 m
234.23544 339.92911 l
381.56708 26 m
381.56708 339.92911 l
S
[
0.0099300155
3.9720063
] 2.9914172 d
50.0709 52.160759 m
418.39999 52.160759 l
50.0709 78.321518 m
418.39999 78.321518 l
50.0709 104.48228 m
418.39999 104.48228 l
50.0709 130.64304 m
418.39999 130.64304 l
50.0709 156.80379 m
418.39999 156.80379 l
50.0709 182.96455 m
418.39999 182.96455 l
50.0709 209.12531 m
418.39999 209.12531 l
50.0709 235.28607 m
418.39999 235.28607 l
50.0709 261.44684 m
418.39999 261.44684 l
50.0709 287.60757 m
418.39999 287.60757 l
50.0709 313.76834 m
418.39999 313.76834 l
S
/Cs2 SC
0.21568628 0.49411765 0.72156864 sc
131.1033 26 m
131.1033 309.46124 l
190.03595 309.46124 l
190.03595 26 l
131.1033 26 l
h
278.43494 26 m
278.43494 220.58261 l
337.36758 220.58261 l
337.36758 26 l
278.43494 26 l
h
f
2 J
[] 0 d
/Cs1 SC
0 sc
131.1033 26 m
131.1033 309.46124 l
190.03595 309.46124 l
190.03595 26 l
278.43494 26 m
278.43494 220.58261 l
337.36758 220.58261 l
337.36758 26 l
S
Q
q
0 0 434 358 rc
0 1 -1 0 196.5542 169.37491 cm
/F1.1[ 12 0 0 12 0 0]sf
-24.083202 183.20479 m
(!"#$%"#&'\(\))[ 9.333984 8.003906 8.666016 3.333984 8.666016 8.003906 8.666016 3.333984 3.333984 10.669922 0.000000 ] xS
CM
32.99707 21.936523 m
(*)s
26.323242 48.097282 m
(+*)[ 6.673828 0.000000 ] xS
26.323242 74.258041 m
(,*)[ 6.673828 0.000000 ] xS
26.323242 100.4188 m
(-*)[ 6.673828 0.000000 ] xS
26.323242 126.57956 m
(.*)[ 6.673828 0.000000 ] xS
26.323242 152.74031 m
(/*)[ 6.673828 0.000000 ] xS
26.323242 178.90108 m
(0*)[ 6.673828 0.000000 ] xS
26.323242 205.06183 m
(1*)[ 6.673828 0.000000 ] xS
26.323242 231.2226 m
(2*)[ 6.673828 0.000000 ] xS
26.323242 257.38336 m
(3*)[ 6.673828 0.000000 ] xS
19.649414 283.5441 m
(+**)[ 6.673828 6.673828 0.000000 ] xS
20.53418 309.70486 m
(++*)[ 5.789062 6.673828 0.000000 ] xS
19.649414 335.86563 m
(+,*)[ 6.673828 6.673828 0.000000 ] xS
0 J
[] 0 d
42.0709 26 m
50.0709 26 l
46.0709 39.080379 m
50.0709 39.080379 l
42.0709 52.160759 m
50.0709 52.160759 l
46.0709 65.241135 m
50.0709 65.241135 l
42.0709 78.321518 m
50.0709 78.321518 l
46.0709 91.401894 m
50.0709 91.401894 l
42.0709 104.48228 m
50.0709 104.48228 l
46.0709 117.56265 m
50.0709 117.56265 l
42.0709 130.64304 m
50.0709 130.64304 l
46.0709 143.72342 m
50.0709 143.72342 l
42.0709 156.80379 m
50.0709 156.80379 l
46.0709 169.88417 m
50.0709 169.88417 l
42.0709 182.96455 m
50.0709 182.96455 l
46.0709 196.04494 m
50.0709 196.04494 l
42.0709 209.12531 m
50.0709 209.12531 l
46.0709 222.20569 m
50.0709 222.20569 l
42.0709 235.28607 m
50.0709 235.28607 l
46.0709 248.36644 m
50.0709 248.36644 l
42.0709 261.44684 m
50.0709 261.44684 l
46.0709 274.52719 m
50.0709 274.52719 l
42.0709 287.60757 m
50.0709 287.60757 l
46.0709 300.68796 m
50.0709 300.68796 l
42.0709 313.76834 m
50.0709 313.76834 l
46.0709 326.84872 m
50.0709 326.84872 l
42.0709 339.92911 m
50.0709 339.92911 l
S
132.55009 7.0505857 m
(456789:;5<)[ 6.000000 6.673828 6.673828 3.996094 6.673828 3.333984 2.666016 6.673828 6.673828 0.000000 ] xS
281.21475 7.0505857 m
(<7==>9:;5<)[ 6.673828 3.996094 6.673828 6.673828 3.333984 3.333984 2.666016 6.673828 6.673828 0.000000 ] xS
86.903809 18 m
86.903809 26 l
234.23544 18 m
234.23544 26 l
381.56708 18 m
381.56708 26 l
S
86.834084 344.65057 m
(#?>@=57?A<B@57BCD?EE5A&@==7&=F45>>5A&A887&<7?:BG887H5A)[ 8.666016 2.666016 3.333984 6.000000 6.673828 6.673828 3.996094 2.666016 6.673828 6.673828 6.000000 6.000000 6.673828 3.996094 6.000000 6.000000 6.673828 2.666016 2.666016 2.666016 6.673828 6.673828 3.333984 6.000000 6.673828 6.673828 3.996094 3.333984 6.673828 9.996094 6.000000 6.673828 3.333984 3.333984 6.673828 6.673828 3.333984 6.673828 6.673828 6.673828 3.996094 3.333984 6.673828 3.996094 2.666016 2.666016 6.000000 8.666016 6.673828 6.673828 3.996094 6.673828 6.673828 0.000000 ] xS
2 J
418.39999 26 m
418.39999 339.92911 l
50.0709 339.92911 l
50.0709 26 l
418.39999 26 l
h
S
ep
end
%%Trailer
%%EOF
