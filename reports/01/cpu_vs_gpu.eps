%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.3 (Build 17D102) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 624 256
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 624 256
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: UUTCRV+Helvetica
%!FontType1-1.0: UUTCRV+Helvetica 1.0000.0.0000
14 dict begin/FontName /UUTCRV+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /T put
dup 34 /o put
dup 35 /t put
dup 36 /a put
dup 37 /l put
dup 38 /S put
dup 39 /w put
dup 40 /p put
dup 41 /L put
dup 42 /i put
dup 43 /j put
dup 44 /d put
dup 45 /space put
dup 46 /G put
dup 47 /P put
dup 48 /U put
dup 49 /n put
dup 50 /v put
dup 51 /e put
dup 52 /r put
dup 53 /h put
dup 54 /u put
dup 55 /g put
dup 56 /C put
dup 57 /bracketleft put
dup 58 /percent put
dup 59 /bracketright put
dup 60 /zero put
dup 61 /five put
dup 62 /one put
dup 63 /y put
dup 64 /two put
dup 65 /nine put
dup 66 /three put
dup 67 /four put
dup 68 /six put
dup 69 /seven put
dup 70 /eight put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<


20457D691844B001602DB800322CB800312A2DB800332C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800342C4B535845441B2121592DB800352C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800362C2020456944B001602DB800372CB800362A212DB800382C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800392C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8003A2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8003B2C2020456944B001602020457D691844B001602DB8003C2CB8003B2A2DB8003D2C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8003E2C4B535845441B2121592DB8003F2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800402C2020456944B001602DB800412CB800402A212DB800422C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800432C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800442C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800452C2020456944B001602020457D691844B001602DB800462CB800452A2DB800472C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800482C4B535845441B2121592DB800492C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8004A2C2020456944B001602DB8004B2CB8004A2A212DB8004C2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8004D2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8004E2C4B20B0032650585158










2B2B2B2B2B2B2B2B74752B2B2B65422B2B4B5279B376706A66456523456023456560234560B08B766818B080622020B16A704565234520B003266062636820B003266165B070236544B06A234420B176664565234520B003266062636820B003266165B066236544B0762344B10066455458B166406544B27640764523614459B36242725D456523456023456560234560B089766818B080622020B172424565234520B003266062636820B003266165B042236544B072234420B1625D4565234520B003266062636820B003266165B05D236544B0622344B1005D455458B15D406544B262406245236144592B2B2B2B456953427374B8019A2045694B20B02853B049515A58B020615944B801A6204569447500
00>] def
/CharStrings 40 dict dup begin
/.notdef 0 def
/space 1 def
/percent 2 def
/zero 3 def
/one 4 def
/two 5 def
/three 6 def
/four 7 def
/five 8 def
/six 9 def
/seven 10 def
/eight 11 def
/nine 12 def
/C 13 def
/G 14 def
/L 15 def
/P 16 def
/S 17 def
/T 18 def
/U 19 def
/bracketleft 20 def
/bracketright 21 def
/a 22 def
/d 23 def
/e 24 def
/g 25 def
/h 26 def
/i 27 def
/j 28 def
/l 29 def
/n 30 def
/o 31 def
/p 32 def
/r 33 def
/t 34 def
/u 35 def
/v 36 def
/w 37 def
/y 38 def
/u20B8 39 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4072461 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C94DF6C6C4CAA4D4724D5FBE8DE875B8787096CC4B940CDD1EB776B48720974CA44D863B501A56E0010915099D9EE0B5A694E8162ADBF9836250BACCB77DB13E16980885486883919330A746641657E0563FFF3F5162B06A9D7D5DB5CE0D50CF57E919C0EA9398C970605E91134D93151321BF9CFB68DFD985247199A657C6DACC9EFB6270B8816E78D9D34FCA62CB362867908E329AB82EA350E1188FFD0E9C658EC3E3998C4119D9EF5D465B6D10EE6DD686EC6FCD4D680EF49045AEF96D67D357135C669A68969017C5600294A7540D33BAE5FA7A50A16A3D4356EC7695F9AD03397DD7AC623320E3DA7619ECD214DA183288B89A4DF6EB4F3BB8EF62FBD62D761A25E61864AC28685F73F5F92BA67478CCA4D076F97317684DF95494157451E10CDBF1ACCFDAF694FC1221A5836E8E80741BCC00A46AA6D01E5FE89A6EFFB4593118430BCCE0BC5EB41BD5CAB91C4BEA115FAB869B5F6E119C7CB42008897F4A9FCCB0DE8D56F9DBFE7FF583D66F393875FAF84DC003F63E2989D41413A19DC5304FBA6B742FA99A579CB9D5826B165B3C16F1CBB816D6D1470FE6D27A8371316D5E5DE4399E50970B8C7C68077C64AAAD45E4158E4F6488CBC783FEDB81A4905A88EF316261420FC209D8188FC49F7F760B81CCF5E6D4F793BA3DEBAC8820A919E51204148E804CCA596429A0251BC054FAE155F6AD3AA8F58055C26340B16DFA140CA73AFDF90AC06D0B40C594AC896874BA2BF417519D7665378B6452911
EB03CF474AFCAD238B7C7E1AE869C49697F5DCD6A80749D8889060D977B270ECD2F1751E8BB1EA1D84D02CE85F8735213A4FAEC597B09E37075B0089CE610336C53F4DF79D8D1CE5BE6306010A646901070DC76057F57A49914DD4475905F4EF2FC99E2AD8EDE57457E8BD46F101013825772CCBB07450E1A457EC9174A3EBC742E5B09B31C53DF20A79A19DF0E0462B543C87648CE9867DAC571BF3B1F7B2054D9BD82B9BF68D7C215908A954A95E96ACC52072E85089DF4A55A7E6AFA7418725758000FD3090D969A7A8895C3CC87B04BBA164B12E169751860B6B39ADDD204DAD9F64EB103CEF6C3D05CC544D101F17E13282EB57C4C5F7B8101B40ADD34A665F8D11E47F20C5FB411C72852DECE1228BEF6B865E080A0458210461B5F2D288B4D829FFF65C5AEA99BE00E8379DF64B89A2D10407B0570368A8EC3054ACD1102DB8ED5906847A320BEDF5F215E8E3F851D74D10DBF77430EA3423008C1CC26F93E95E508FA6F2D94ADEE3A203C253DA035FFD91614CC97FA0B17719F23F065F266C802F8C1E93363A7E06760DA48EBEA04A0D378EED5CA1E1D60B7B83AE77C93310370AE96E938093980898B8E12E82C4DBDB7E1C80A125515186CE510DCAE4431669FCCF1FDB3D078C41D544D5419B66BDD3470CAF07F4C7D080CAE671439843D74DB09F89CBF0C3C24F93936A3CF2AE0A08F688A60E65F476BAE93524A03310B751E723E7F04E4AE3853624AED751B5F7ACA19BAEB32456B40365DD3C13CBE166ECC626D8681A100F2F4EBF611DF80536A1F9F9931C24E81656CFAAD4A4FBA9F331CAD26458D8AFC5E5E4D8133B54BF62F66BA46BC680DB50FF4C54AFD410247E2ED595F9E3F73FB4AFFF98C3B0A6254B8BA96D414723666F589A83BC1F35A6E5218AFFC9617313D9E3A15211FF0B946358B6619722B1AC41BDE445BADF974DFAF698CC947EDC2001B823B8E1C88B39F0F26FF52AFE30A65963295BC8491F065E6F04E72B4EFD357BC94C21FA93BA4597BB88B827B7EADA61D939D35197D82FE99E71C2B71BDF23ED2845EFC4F046E18A5F0F4D2693679ECA01D30CD981360E4E859DFF200DCA43AD06A8DE67F402C85AE5C013CBB3A3F64FF6040D90309A83D14A9DE51DECD30E50A93EDD7DA541C7EE0F8999888899D78BFCA101D293E4CB058DB83AD7DE4F10227B98C4B5B97F848330686DB57A0353FE6E1772554AE75FD89A251704692FAACC2D56B390BD39C54204B89D8A7CB5EC19EA29CED27612A9026C6504EBB33FC0451C321248D2AE03AD62C9B2EC21581D11EFD9329F75E59EA8EEAD4BF111ED3A4B8EE9978BAAA0932F107E97DF16CC70A7A1C07D273C85730A569905920CFF88D3CD1CD1B1C9FB55C0223A8C5CC289FE141E08E8C2A8EFC793717DFE64BF0C2F28D0CEC592DFE1421C5D1AB75FB639732B018CD067DC

823164DBB91A05E46D2517EAEC0E02C1F0FB12B2CCC39E659E2B25250C4DA2FB04837DBA5F4FEECA42650036691682E51D2E793EC5AC4D92B332A0E41D71EC15B7BC53F19AD0695662CB50FCBB53036E21C7EDF16809587C4C6FEC84F6F5CC2B3D0FAF6C0E9D96BFA57B64FA43B7CB1DE2D50F430133191F560CFFFAA605C8BF3DE37882B22D0532496424AF1ED6BD1FCE3696FD7BB91659E2529AFB78811A8C393307CCA55300083078F38E7CED2F1BE2AC64905AFEB71FE5BEF6ECAA81A07738562509807AD1A044983326E214075F54918535392370990C60CDE53EBC09F36CCFB231575E32945A781FDE9CAC6478E712C7C0C2F8FF28C41D9278ED1B1074E551343AC171440CB9E16E2B638A721498B68194E44001D643917C1D00DD1349D2F52F50B8BCA62D06BBA3ED5FF74D7DBF5CE96D7BB2C0235C3CCCE987294373A46BAA4F6623907D8A7C515CC731BB499E622D77E47B507C544BDC71CDA94F7FCCEFD77EB5851C72264E357A8D01D61F05AC4CE291725C82E9DE844C1603A5706BC239E5A046C06AE49C30BA8AA5C68B361F2131B69402FFAB90667FEB9B7641C88CA8DE344F4BE79A69F909188EF07686B108AF4F4DA7813850EC14A45AE9F40EAFCE249FAA6558F20566DF3C965E023A35886A053F454662C4786160839F4A2130421FF715A6E97926A5CEC314792DE6BEB16089C35791FE45980F6A2ABF144F2F2232A0EAA4CCC594C6A31B7D38069D0F6DD3A55B4804C91ABC3C5B71248D9AA9BC4EFB653D38A707D19CBCA9B2A66E52DB2899287896C2414C4CFB3C5535A4849B5D289DD5A746F159FA645C68081EA76DDFD9551CC2475A6D56414493986C97D40151343D7CC6C59650B6A119F4EF050F1030E23551887FDA2595D6FBD137AF394BDEF210F8F08DB9B9BFF08B9E34875CFC9D1D80B4D823B21907C5D23CC04282ADF8CE3B37716AC064BBCFA1AF21A91ECBDD9B1BAB998D565946F4AA5B652A67573980EBE97DCD220C22E14FBF43568504BFBC78E591AB6283FCF24098A64DC8322402BAEAB388CA6AE489419354152623B5006ABD1FEA82D514B134E1E7EC1EC6EA9EECE48E1BA2E5BEF2139DECFA3F38F2CB2E2C492ED53AED086A9CB498DB85D1B81F15BE3A38E04CADC8108168284058BA036DACCFA527A531DB9C5228F0DCAF38FEF27406E0ACC2B690A5CC2B2A575E5FD011BE15691BE5A0376F9513DEEA5C20C5CFC64BBF26DC3119D1918BB8813A851280BE84DC1C3078B8F4A6D9728AF82F7A8E2FAB5C971337D82938B50F1698DA79B3722CB6A9FF4864A3942610CD6BE84540A653B084B13841DBA8209BB5BB18B26C28983CBB60C75D1031D6AE531E873F939BBFC21C64373BB7AC635B52C3D6D21A1FB01BF9902AAD15378C57B74D6F1E3FB8DEE0205FAFB50591C0CCAD1D000755B1FD10F35654948D
A9D54160D2115F55E9E9D57A618BFB369C902866E0A76790E98B72097D46DEB2F8EA08DF0F7C21F10226B016630D57EDBEED19953582B404D119304986312A2ADE806AAE765FE828F21500052AD11BA9858D14F6CA7264EEAE41FA986CD3F52EDF7B574DE117F905BF720DF6ADE41B21208DB1864FE53B57E0C8F00407993EEC5C56C26CDD216F66C144DD34910F04744162A67CD8AC4A45E2ADEC7E59C2BDE1B2DC1F4D1E310705BF3D42D43ABAA051C3AA85F9766960B4C9BAB2B4737AD54F934EBEE4C1775F5B512A6C67036C094682D6E07DE22F0EB618BE1901827AB69F46FAEC1D4F9325A2E9760BFDB5DDF7D12739F95086322D7983FD8BD9BD3B7B67B1FBD701A42FBAA7DA002F188253DFD411DD37FFB4AC893C88F242D87341A2FCD2CBAC534A3E85BDEA90ACE5CCC86E19F959E015990A3F5CAA8BAD50EDCA981F5E0BBC1E7AD212F800A4824FEA68D7E56D209BE09689F43452898E737FA6EF0C6D33109CA8709CE08638488801869425980DF9A405D5C32233D3E483A563A60B90AA93968722D9961E12CA1ABEB3C82A04CCA1B091B1EF2C8B98673D6A7D1A34831B05AFC9D288D3E3845187531716411EACE6F8FA6A47BBB14B5AD21F6A1AE6438589A4AD68DCCAE20FF0A13C456F54E91B175CE28AF719B1218B31BB678041CC11845B0658B8EEF9A2E26A01E48113E7078AC51860CC4E7E97D1AB9C04DC443956F9D6DC75BE53E12AE0A1F17D498C48E40F47AB87E05352EC5912F6D6E59BBE41188D33082347E483F1D3F5848967141C444882F3E461571DD34B5D6D7E7E1D0CFF94920C0F2504717C0D723E9D63826ABE485141E174EC4402C421331D94991182CE9963D1C52B2A5B378BA14DC2AE19F5B3073B9A3BDDB0118D2A1B0E650AB2D5BBC311A48F92AF3A627552CC2D3F71FDFE2E1B32A64386A1350ED0BE213D757C48B221B31FD6A334DDC54795FEB1B8971F78BCA431CCB8CF6D94A18778F4568B4794DF1A01D6C5583754130950C681C22E6CAF313DAAA1C54F2F38A4E842F52EAD3F549192899A985C040DEBC0341A0F716AF4B62C0551747C9C50057F2B97AC3E3BE49883B32944B5EA056CA97ADA2FA45A221FDF15E6C17B5ADA4193F0C9D5A2655738A0DFFE83B5E0B76032E7EB8A5D71CA942EBD6D766E99A2E803AF496018A1DDE5FA70C86B5758587939DD2DBDBDE04133459FEFD55F5F6C739459A1A7F45E174F2D1F0864A1815714FDB401E62F28023A3E5225887C6B9D3286A303BA44E4ACFB062B1FCAE3503063419490F331A38A71D4B9546AACC305D033D80AEAA132E6DE8AE2FD2FA5BA23855AB2C4ACBEAEABEB4E64213CFF99694F37218D061EF248085FC3096CBF0176ED5CF851F5A26D4008B5E094544C23E1D82B12CA3C047D51B1EC94657BEA620092ED4C66604683F453A826953E9E2C1677D1
9CDC5FDEFB94196115A7903BE4D703D2904DFEE79A37E7A00037E9AEBBE0B8FCE84D6B4B284A18AE69413D35094155DFFE74F002593A766BDD176A1420DA19D92E38C9EDC63D862593BF2E02BE2B5680CCA35330EC0941D6AAF7E0F10E28B0BD57ACF467749D602B9C70780AADA37230F247FBA61262D9E9F3A5ADEB23A489FB36330D9A90A44972B1D8F4ABBBB2AF727023222E53573C12FBB5FA5B347A7ACF85FC35F4E1C824E9210C26B1075A57BDA5F8F99BA21AD340BB878F7C526E704D5B9AA987BA3AF203BAD3073A3696F7B430D2309AAB6F8DD09E7B4D62282AF57AA85118C02E63DC0646E2095EF6FCF2082FB7B7E5F181898F13D23B93307F519F499C7B3F4320FC64C5BF972E64B22AAE50AAC0B3C506A17EE6A3ECDAABD77ACE24C0201618E0F00DEEE6067476F62E602D981A68CEE7D97C606E74F7A7B56B0ED324D7E44913FC6E28FEFCC9D10857CAD37B60731781EEB418951E6DD4AC1D5A38C2245CDA992E44D8FB9C359547FE8B9E387F18FFB6178BD8828F23CAAC911A9EF7F15FC770E4AC220F7F3FF86EC2B47A492E80E65291EEB4307EF377DA5F6C51CFF05A10E861F2FB86C222A988CCCC841CDB211D1C3CAF166B7801BF15D75A742EF96C0D4EE1E572C8B3094F4B537621082CE49CD0D15965788B7318198E471D83DD10D2329594599FB1FE8BBA305BEE89682F38CD36B7904A1452841A51E22C2CFE93D58F29CE9A9A8D1828FAECADEC5155E4C629FC43E674694CE69B5DAC5FDD3E903F518B030CA763A6591A93FE05131DF8BE09336AAC1B9401EEDC50AF86F06B5918E0F1C2B937B7DD0178540A44938ED22B982C57672F26E97B35DDAD1FF2BB978A5E441365FA9AAB4C72E13F2324A768A1380C3557F3BCF5101F77CBA19B7F4475CEB3D5658658F688E97120F3A7E4104409A8E3325C3D677EE35971B7E01630FCED858B084F4EDA52C5DACD889EB76E29F8437B231AFB95050456599F71951B16C6EBAC218FC0D009EF299CA3C620806C26CB6F43EDA38C188EA2BF16B89F84D0F222FE5056D9D01CE29322A1BE882E9C3F0969B92956B2DC08573BC1F1C0FBFDC7C7BA651A4F5476B9DBB166BCAFBF47D983E70C08D7740563915B27B2E3E93DFA01C73C69DC284503BB722B6050C15E18EFC3DDA1445A2301A5AB3D76EDF6D0A2B46A5DF444173D187EA645C9E18ED6AD0B35AE77DA20BBC6F2287EB8FD5EFDC11836F8AADE4161681990AE4673C527371AF2E42BDDC0548A64E5E5BE4E478DA06E03919357D2AF7FF712EB018AE4244B5984C48BDC011BF0A11A16500AA69F6322FB968494B1AF61FBEEE0C27882604FBAA02652236CD11650961964672B2AA2C2FB8B3FA599CA22A91424616DDC43EF0360549816179A08EEF5DDCC9E68CE46A9CEC9A991B2C5F43EE9B19DB3A803448F52C14BEC99BD8C9778
B6A58DE597F6D250D4EC02C95E306B9C48E5D4E378D55DE8194072D572690D1F85C1A804EA9AFD808430D59FA4E415ADB8AABD3FB5F7EDB182446AB6D75C0A468311B741B7BA936E48283A7F4FB2FE9E5951FEE3424DB5EFF79608ED903FE517A044F85E1DFAE6313F8D340D79692A7CC42F7E33
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/UUTCRV+Helvetica cguidfix
/F1.1/UUTCRV+Helvetica renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.5 w
1 J
[
0.00974702
3.8988078
] 0.00487351 d
/Cs1 SC
0 sc
q
50.0709 44.0709 557.95117 186.04721 rc
63.35545 44.0709 m
63.35545 230.1181 l
116.49365 44.0709 m
116.49365 230.1181 l
169.63187 44.0709 m
169.63187 230.1181 l
222.77007 44.0709 m
222.77007 230.1181 l
275.90826 44.0709 m
275.90826 230.1181 l
329.04648 44.0709 m
329.04648 230.1181 l
382.18469 44.0709 m
382.18469 230.1181 l
435.32288 44.0709 m
435.32288 230.1181 l
488.46109 44.0709 m
488.46109 230.1181 l
541.5993 44.0709 m
541.5993 230.1181 l
594.73749 44.0709 m
594.73749 230.1181 l
S
[
0.010193402
4.0773606
] 3.0707624 d
50.0709 110.51633 m
608.02203 110.51633 l
50.0709 176.96176 m
608.02203 176.96176 l
S
/Cs2 SC
0.21568628 0.49411765 0.72156864 sc
72.654633 44.0709 m
72.654633 210.92654 l
89.924553 210.92654 l
89.924553 44.0709 l
72.654633 44.0709 l
h
125.79284 44.0709 m
125.79284 171.8528 l
143.06276 171.8528 l
143.06276 44.0709 l
125.79284 44.0709 l
h
178.93105 44.0709 m
178.93105 168.25136 l
196.20096 168.25136 l
196.20096 44.0709 l
178.93105 44.0709 l
h
232.06924 44.0709 m
232.06924 168.86357 l
249.33917 168.86357 l
249.33917 44.0709 l
232.06924 44.0709 l
h
285.20746 44.0709 m
285.20746 163.18167 l
302.47736 163.18167 l
302.47736 44.0709 l
285.20746 44.0709 l
h
338.34567 44.0709 m
338.34567 160.33679 l
355.61557 160.33679 l
355.61557 44.0709 l
338.34567 44.0709 l
h
391.48386 44.0709 m
391.48386 157.88531 l
408.75378 157.88531 l
408.75378 44.0709 l
391.48386 44.0709 l
h
444.62207 44.0709 m
444.62207 154.0061 l
461.892 154.0061 l
461.892 44.0709 l
444.62207 44.0709 l
h
497.76028 44.0709 m
497.76028 152.36554 l
515.03021 152.36554 l
515.03021 44.0709 l
497.76028 44.0709 l
h
550.8985 44.0709 m
550.8985 149.96815 l
568.1684 149.96815 l
568.1684 44.0709 l
550.8985 44.0709 l
h
f
0.89411765 0.10196079 0.10980392 sc
89.924553 44.0709 m
89.924553 125.35758 l
107.19447 125.35758 l
107.19447 44.0709 l
89.924553 44.0709 l
h
143.06276 44.0709 m
143.06276 97.821175 l
160.33267 97.821175 l
160.33267 44.0709 l
143.06276 44.0709 l
h
196.20096 44.0709 m
196.20096 97.602173 l
213.47087 97.602173 l
213.47087 44.0709 l
196.20096 44.0709 l
h
249.33917 44.0709 m
249.33917 114.52361 l
266.60907 114.52361 l
266.60907 44.0709 l
249.33917 44.0709 l
h
302.47736 44.0709 m
302.47736 98.878922 l
319.74728 98.878922 l
319.74728 44.0709 l
302.47736 44.0709 l
h
355.61557 44.0709 m
355.61557 94.367722 l
372.8855 94.367722 l
372.8855 44.0709 l
355.61557 44.0709 l
h
408.75378 44.0709 m
408.75378 93.393486 l
426.02368 93.393486 l
426.02368 44.0709 l
408.75378 44.0709 l
h
461.892 44.0709 m
461.892 89.205162 l
479.1619 89.205162 l
479.1619 44.0709 l
461.892 44.0709 l
h
515.03021 44.0709 m
515.03021 86.559059 l
532.30011 86.559059 l
532.30011 44.0709 l
515.03021 44.0709 l
h
568.1684 44.0709 m
568.1684 84.489044 l
585.43829 84.489044 l
585.43829 44.0709 l
568.1684 44.0709 l
h
f
2 J
[] 0 d
/Cs1 SC
0 sc
72.654633 44.0709 m
72.654633 210.92654 l
89.924553 210.92654 l
89.924553 44.0709 l
125.79284 44.0709 m
125.79284 171.8528 l
143.06276 171.8528 l
143.06276 44.0709 l
178.93105 44.0709 m
178.93105 168.25136 l
196.20096 168.25136 l
196.20096 44.0709 l
232.06924 44.0709 m
232.06924 168.86357 l
249.33917 168.86357 l
249.33917 44.0709 l
285.20746 44.0709 m
285.20746 163.18167 l
302.47736 163.18167 l
302.47736 44.0709 l
338.34567 44.0709 m
338.34567 160.33679 l
355.61557 160.33679 l
355.61557 44.0709 l
391.48386 44.0709 m
391.48386 157.88531 l
408.75378 157.88531 l
408.75378 44.0709 l
444.62207 44.0709 m
444.62207 154.0061 l
461.892 154.0061 l
461.892 44.0709 l
497.76028 44.0709 m
497.76028 152.36554 l
515.03021 152.36554 l
515.03021 44.0709 l
550.8985 44.0709 m
550.8985 149.96815 l
568.1684 149.96815 l
568.1684 44.0709 l
89.924553 44.0709 m
89.924553 125.35758 l
107.19447 125.35758 l
107.19447 44.0709 l
143.06276 44.0709 m
143.06276 97.821175 l
160.33267 97.821175 l
160.33267 44.0709 l
196.20096 44.0709 m
196.20096 97.602173 l
213.47087 97.602173 l
213.47087 44.0709 l
249.33917 44.0709 m
249.33917 114.52361 l
266.60907 114.52361 l
266.60907 44.0709 l
302.47736 44.0709 m
302.47736 98.878922 l
319.74728 98.878922 l
319.74728 44.0709 l
355.61557 44.0709 m
355.61557 94.367722 l
372.8855 94.367722 l
372.8855 44.0709 l
408.75378 44.0709 m
408.75378 93.393486 l
426.02368 93.393486 l
426.02368 44.0709 l
461.892 44.0709 m
461.892 89.205162 l
479.1619 89.205162 l
479.1619 44.0709 l
515.03021 44.0709 m
515.03021 86.559059 l
532.30011 86.559059 l
532.30011 44.0709 l
568.1684 44.0709 m
568.1684 84.489044 l
585.43829 84.489044 l
585.43829 44.0709 l
S
Q
1 sc
q
63.0709 234.1181 192 18 rc
63.0709 234.1181 m
255.07089 234.1181 l
255.07089 252.1181 l
63.0709 252.1181 l
h
f
Q
0.60000002 i
/Cs2 SC
0.21568628 0.49411765 0.72156864 sc
q
0 0 623.62207 255.1181 rc
71.398895 249.23811 m
70.046921 249.23811 68.950897 248.14209 68.950897 246.79012 c
68.950897 239.44611 l
68.950897 238.09413 70.046921 236.99811 71.398895 236.99811 c
78.742897 236.99811 l
80.094879 236.99811 81.190895 238.09413 81.190895 239.44611 c
81.190895 246.79012 l
81.190895 248.14209 80.094879 249.23811 78.742897 249.23811 c
h
71.398895 249.23811 m
f
0 J
[] 0 d
/Cs1 SC
0 sc
71.398895 249.23811 m
70.046921 249.23811 68.950897 248.14209 68.950897 246.79012 c
68.950897 239.44611 l
68.950897 238.09413 70.046921 236.99811 71.398895 236.99811 c
78.742897 236.99811 l
80.094879 236.99811 81.190895 238.09413 81.190895 239.44611 c
81.190895 246.79012 l
81.190895 248.14209 80.094879 249.23811 78.742897 249.23811 c
h
71.398895 249.23811 m
S
0 i
/F1.1[ 12 0 0 12 0 0]sf
87.0709 239.05463 m
(!"#$%)[ 6.000000 6.673828 3.333984 6.673828 0.000000 ] xS
0.60000002 i
/Cs2 SC
0.89411765 0.10196079 0.10980392 sc
167.3989 249.23811 m
166.04692 249.23811 164.9509 248.14209 164.9509 246.79012 c
164.9509 239.44611 l
164.9509 238.09413 166.04692 236.99811 167.3989 236.99811 c
174.7429 236.99811 l
176.09488 236.99811 177.1909 238.09413 177.1909 239.44611 c
177.1909 246.79012 l
177.1909 248.14209 176.09488 249.23811 174.7429 249.23811 c
h
167.3989 249.23811 m
f
/Cs1 SC
0 sc
167.3989 249.23811 m
166.04692 249.23811 164.9509 248.14209 164.9509 246.79012 c
164.9509 239.44611 l
164.9509 238.09413 166.04692 236.99811 167.3989 236.99811 c
174.7429 236.99811 l
176.09488 236.99811 177.1909 238.09413 177.1909 239.44611 c
177.1909 246.79012 l
177.1909 248.14209 176.09488 249.23811 174.7429 249.23811 c
h
167.3989 249.23811 m
S
0 i
183.07089 239.05463 m
(&'$\()[ 8.003906 8.666016 6.673828 0.000000 ] xS
0 1 -1 0 150.68416 123.50485 cm
-101.13985 137.33473 m
(\)""\(#*+,-"\(-./0-*1-2345"6,*17-#"#-8/0-9:;)[ 6.673828 6.673828 6.673828 6.673828 3.333984 2.666016 2.666016 6.673828 3.333984 6.673828 6.673828 3.333984 9.333984 8.003906 8.666016 3.333984 2.666016 6.673828 3.333984 6.000000 6.673828 3.996094 6.673828 6.673828 6.673828 6.673828 2.666016 6.673828 6.673828 3.333984 3.333984 6.673828 3.333984 3.333984 8.666016 8.003906 8.666016 3.333984 3.333984 10.669922 0.000000 ] xS
CM
32.99707 40.007423 m
(<)s
26.323242 106.45286 m
(=<)[ 6.673828 0.000000 ] xS
19.649414 172.89828 m
(><<)[ 6.673828 6.673828 0.000000 ] xS
42.0709 44.0709 m
50.0709 44.0709 l
46.0709 57.359985 m
50.0709 57.359985 l
46.0709 70.649071 m
50.0709 70.649071 l
46.0709 83.938156 m
50.0709 83.938156 l
46.0709 97.227242 m
50.0709 97.227242 l
42.0709 110.51633 m
50.0709 110.51633 l
46.0709 123.80542 m
50.0709 123.80542 l
46.0709 137.0945 m
50.0709 137.0945 l
46.0709 150.38359 m
50.0709 150.38359 l
46.0709 163.67268 m
50.0709 163.67268 l
42.0709 176.96176 m
50.0709 176.96176 l
46.0709 190.25085 m
50.0709 190.25085 l
46.0709 203.53993 m
50.0709 203.53993 l
46.0709 216.82903 m
50.0709 216.82903 l
46.0709 230.1181 m
50.0709 230.1181 l
S
293.70331 7.1152344 m
(.4""##3-$44$?)[ 9.333984 3.996094 6.673828 6.673828 3.333984 3.333984 6.673828 3.333984 6.673828 3.996094 3.996094 6.673828 0.000000 ] xS
81.582268 25.121485 m
(@)s
/F1.1[ 9 0 0 9 0 0]sf
88.256096 31.145508 m
(>A)[ 5.005371 0.000000 ] xS
/F1.1[ 12 0 0 12 0 0]sf
134.72047 25.121485 m
(@)s
/F1.1[ 9 0 0 9 0 0]sf
141.3943 31.145508 m
(@<)[ 5.005371 0.000000 ] xS
/F1.1[ 12 0 0 12 0 0]sf
187.85867 25.121485 m
(@)s
/F1.1[ 9 0 0 9 0 0]sf
194.5325 31.145508 m
(@>)[ 5.005371 0.000000 ] xS
/F1.1[ 12 0 0 12 0 0]sf
240.99689 25.121485 m
(@)s
/F1.1[ 9 0 0 9 0 0]sf
247.67072 31.145508 m
(@@)[ 5.005371 0.000000 ] xS
/F1.1[ 12 0 0 12 0 0]sf
294.13507 25.121485 m
(@)s
/F1.1[ 9 0 0 9 0 0]sf
300.8089 31.145508 m
(@B)[ 5.005371 0.000000 ] xS
/F1.1[ 12 0 0 12 0 0]sf
347.27328 25.121485 m
(@)s
/F1.1[ 9 0 0 9 0 0]sf
353.94711 31.145508 m
(@C)[ 5.005371 0.000000 ] xS
/F1.1[ 12 0 0 12 0 0]sf
400.4115 25.121485 m
(@)s
/F1.1[ 9 0 0 9 0 0]sf
407.08533 31.145508 m
(@=)[ 5.005371 0.000000 ] xS
/F1.1[ 12 0 0 12 0 0]sf
453.54971 25.121485 m
(@)s
/F1.1[ 9 0 0 9 0 0]sf
460.22354 31.145508 m
(@D)[ 5.005371 0.000000 ] xS
/F1.1[ 12 0 0 12 0 0]sf
506.6879 25.121485 m
(@)s
/F1.1[ 9 0 0 9 0 0]sf
513.36176 31.145508 m
(@E)[ 5.005371 0.000000 ] xS
/F1.1[ 12 0 0 12 0 0]sf
559.82611 25.121485 m
(@)s
/F1.1[ 9 0 0 9 0 0]sf
566.49994 31.145508 m
(@F)[ 5.005371 0.000000 ] xS
63.35545 36.0709 m
63.35545 44.0709 l
116.49365 36.0709 m
116.49365 44.0709 l
169.63187 36.0709 m
169.63187 44.0709 l
222.77007 36.0709 m
222.77007 44.0709 l
275.90826 36.0709 m
275.90826 44.0709 l
329.04648 36.0709 m
329.04648 44.0709 l
382.18469 36.0709 m
382.18469 44.0709 l
435.32288 36.0709 m
435.32288 44.0709 l
488.46109 36.0709 m
488.46109 44.0709 l
541.5993 36.0709 m
541.5993 44.0709 l
594.73749 36.0709 m
594.73749 44.0709 l
S
2 J
608.02203 44.0709 m
608.02203 230.1181 l
50.0709 230.1181 l
50.0709 44.0709 l
608.02203 44.0709 l
h
S
ep
end
%%Trailer
%%EOF
