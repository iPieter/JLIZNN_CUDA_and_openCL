%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.3 (Build 17D102) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1024 283
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1024 283
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: ETCJWO+Helvetica
%!FontType1-1.0: ETCJWO+Helvetica 1.0000.0.0000
14 dict begin/FontName /ETCJWO+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /O put
dup 34 /v put
dup 35 /e put
dup 36 /r put
dup 37 /h put
dup 38 /a put
dup 39 /d put
dup 40 /space put
dup 41 /t put
dup 42 /n put
dup 43 /o put
dup 44 /p put
dup 45 /z put
dup 46 /i put
dup 47 /c put
dup 48 /l put
dup 49 /f put
dup 50 /bracketleft put
dup 51 /percent put
dup 52 /bracketright put
dup 53 /zero put
dup 54 /two put
dup 55 /four put
dup 56 /six put
dup 57 /eight put
dup 58 /one put
dup 59 /G put
dup 60 /y put
dup 61 /m put
dup 62 /P put
dup 63 /U put
dup 64 /g put
dup 65 /b put
dup 66 /u put
dup 67 /k put
dup 68 /hyphen put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<




DAFA4803687955557978565579022BCD9090CCCC9090CDFB2179555579795555790000000001005501DE024B029700030020400A002F03011A0500190405B80142B321BA48182B2B4EE410E6002F4DED3130132115215501F6FE0A0297B9000000020040FFD9041C0598000F001C00714017870501460815350F051C35070D1238036F18380B1E471D1076C418D4EDFDED003FED3FED313043794034001B0D2601251A2609250526160E18280014001228011B081828001006122801170C1528011302152801190A1C280011041C28002B2B2B2B012B2B2B2B2B2B2B2B2B81005D001716111007022120272611343712211236113402232202111417163303407C60577EFEE2FEFE7E693F7601358AA678AD9F932F48AE0598E5B1FECCFEDCBFFEEEE0BB013BF4AF0146FAE5F80152F4013BFED5FEDDDB85CB000000000100C4000002D5059200080023B10801B80133400C0404070C04079605000A47091076C418C4D5FD39003F3FF4CD313013353E013733112311C4C39A268EC003F68A1359A6FA6E03F60000000100400000041E059D002200A6404E3604460457056B1D6E1E7A1E84018702082A085A196B197C197C1CB519050022010F041C0E1921071C19040100051F0F0F22130A351305201F7521220C217F0738166F220E270F811F38222447231076C418D4EDF4ED10F5EDE4003F3CFD3C3FED1112392F1217390111123912393911391239005D31304379401C04190C2511260B120E2800091407280119040D100A280108150A2801002B2B1010012B2B2B2B81005D36123F01363736353426232207060723363736213212151407060F01060706072115214A85C1C0813452967DB9472604B70342750128F6E37946B5896238641A030EFC29B90112706F4B35536B7D938C4B85BB76D0FEF6A3AC7A47654C3631576AAA0000000200340000042F059C0002000D005C402209020A080D010202BE12060607020601050708030106070A02750B05EF030C070403B80117B501960D08AC0AB80158B3050F470E1076C418D4F5F43CFDE4003F3FF43CFD3C1139390111123911123939872E2B047D10C50F3130011109011121350133113315231102A5FE3501CEFD8C029098D3D301FB0289FD77FE05015EB0038EFC5F9DFEA20000000002004DFFDB0423059E001B002700A94039771A0117082508271958198600870188090747080A212721350E0E1403C707351B052735140D032902811E38116F170A023C0A2431172947281076C418D4FD397C4B52787A2F1810F5EDF4ED003FED3FEDED12392FED11123931304379403425261C200F1600060526200F1E280126152428001C131E2801060003280104031F1021280125162728001D1227280004010728012B2B2B2B01103C2B2B2B2B2B81818181015D005D0016152326272623220203








00>] def
/CharStrings 38 dict dup begin
/.notdef 0 def
/space 1 def
/percent 2 def
/hyphen 3 def
/zero 4 def
/one 5 def
/two 6 def
/four 7 def
/six 8 def
/eight 9 def
/G 10 def
/O 11 def
/P 12 def
/U 13 def
/bracketleft 14 def
/bracketright 15 def
/a 16 def
/b 17 def
/c 18 def
/d 19 def
/e 20 def
/f 21 def
/g 22 def
/h 23 def
/i 24 def
/k 25 def
/l 26 def
/m 27 def
/n 28 def
/o 29 def
/p 30 def
/r 31 def
/t 32 def
/u 33 def
/v 34 def
/y 35 def
/z 36 def
/u20B8 37 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4072461 def
currentdict currentfile eexec

40FFFB761DBD2B74F28AD9C1DBE83AD3E2E9BD8CB08F5B2EE11F1EA2C477B244C221028B72566038281DCFCF319A4C89715B8C77EE13BB02DE36DD9A14627630D0B479FEA24FAAAAF3FBD57000E1D41467FFD01D27163C6A8AF7AB18172B8DAF8991F1BEE72B4060F55E0AAF0AFE20C57628B3B549BB7AF5C137382A6EF2A658441DA01D2A0BDEA281820F4760D7A1FAA4CD8A57CCC920289B8CCEDBA60FB636B65931E2A19E16CE7FA9B8158806CD9D00872CB71070F57F0E65BEEC3C75E5DBB5DAEBE34130C76A09A5AE8177DF521B7D53B7D9E0F8A51F67D1673745612354DEA7A028C19379F8B6943C8DB4B267912CAA9A40B1DBAEFD36613E77AB2D1546E31B670372F34D41CADD1F948E9E4B4F126C52DB927424C161146560E398CBE81DFFEEAA8B61EDBDC2A64ABCE4FB70113E08A588890748DEB0CB64D8C4C89B46407E5628698E2ED28D2F63683A64EDB193904E372F20D30F1E80C1EDC4F831C179CBB881D4312EA10F60BF304F0C6308BCBAE9E766011388CC6DD9D102A11576549643D752749BB9C5016CFBC324C8E0A10F437738DE51706C7A31D99AE0A2DED183B541D818C7B72E0EA9B8B552D0BD8B433BA90F21FC6415113E8358457AB519F348193C1B81CF96C0E7A92FAB8A526FC267A967125785A8976FF72D8A2E0EEFC03C8CD79DE970E813FB1DD003FC47A45540707D2917AE0094B7DB9B76927DC14390132003A206C84389C8CEF0C66C6A68B8D8C416BB3C607B775595FE45DCBC436265FFB8C4D98F7E862C61775FE1214A1ABD80F3F67A810461D5583DEE9F8C545E5117A6DC9A8A9A3AD59CCE2459089856135DC956F42E826C8B9D047E490BFF429047FDE0A9C72CEB36817BD0CFB763C9B36ACE43574B03B9C6C1548B0A10BE8B1FE016443F9256DB8CD52164F8BA7228E9F884EE9DBEB00D387D8C1D5B7AA71CE076631E550F7643B29E58A12B316E71C3EAE31B795E59581579E39E51E4563B9D32395D79D8882F7A76E1E59BBC6F8A8051F407FDDEECBDED3723A435EE5C43BCCD4459F705946B35646B2BD4D5115A8077916C89D87F912EB0C14E06FA45C2CECA43AC17002C618E601359C48A3B96F4FEBE5837E39FDFCBCD6A72E5C092BBF0891177D855E0781E162A5FF7CB0D77FFBD02167E6DE0ECD0EEF70EB2209BD16950C1673035AA21B74C794DF6642FFF3E463BCBDD1D78D5D3F62D7B031705FAD57EC71C4F14F585F202D3F41E304E7808F0CBAB13DE77F95F1B5C20D6ECDB212593C9034A3E90DC19A7161D1972AA96F2A54095EE3D99ADCC77AD0179DC1D761D362EE03054684333C39E5D6A0C7B2883B9EE325DA31F29263D9D41955B2CD4DAF1201D5AFDB89482C72A7E867D0EE1667EE99978B2B8C78E81C419932F6585A8A3358FF5BEBBDD2A3A93D8372ECE3D5F40F6EC933FEA3028BB2B03D5
6E9031165F94A76C96F5F2344A2A7F9BF6D407062068DEC4581F3B1E35F4F5D6841F078BA6DBBA0B45898B92C237FB8F6BD376F060BACE678408F226F3759648B0E64DC0A9944ACEE71B634918FF6BA990C8F4587458604A427C4D3003A72797018D54551775F7D263EA0FC376CEF0CB85D703A82A938BC5E8754B99D54F281893E5349B0854CECDE64CD3854BA9FCC007913CDD2313EEC7FE77049C3727F5EEB734E344693AB831A38A4C37C879DF8D37BECD7B95D384748E9D2134A7AAB4A81515BAFE30DBDBDC44672AF85D88173E304ADCE64A73BD34E4AC5431F7DB4553AE6408705176FE02B9AABB3EA4383F04C9A44D3D7F765A82203A7105FFFE554E2F92CB643569C061386BDAF157345B91E816164D928A3B77D0D2568B58CD168E68EB428B61880022024438E629492A756BC30F7C6B533B5AEAD0452156412E6403B54FD532E74BA71A300544DF3ECF4DA0BF3C8D585BE833D0EFDF692581D0823A4A78A998E624ED33517A565FC900DE308AE2E30F5B6F1D2052193BBF28CDE141B17A67FA6604A82123DF94D4064E7CB511749ED0995388128639BCC542639B3523F22F8D7E0C468C5754A983213008B741196129960AE0DEB4DC54CF5FB7C88B5CFBEBAB7E99B037B424E7A89D9F9903284560D5748D9BF6C363CBAA89FD350A7BB3BD6FA98BA7A61A7EC21979A930D1EE47B6638E5B90387BAEE184F237FFF080DD4CAC768440DA64D983211D0E78282C1B5BBC7B652DC1615ED90024977E80E0661FD67847B8C2986FEC773C2C11B99B85EBA0AEA2FD2609071BE0B3ECBA93194DE4CBBF50A08A8EFFBCF9A346936DE86A14B918F4F98B0D38C4989D69CBDE9EB9DFD0C91A31E80C7C370214C8CE722202A0BC53A48BBB1AFB106761A32640951419BF43B1293367AB4C6FF64A4DBE2FBDD3A5F235DEC78CBBA30734BED15B9CF8A53A5D8193C715595B36167FCBE65CAC46688AE87B1E4745202AAE34CE03584772B31A77DCA0CC5763E1796B4D26E170AEA95437C536AC61B718B7ED57DE78C11830EC8F608C62123BD952B9865244BBB6153AC1D494536CE9CCC409A228F146BE72DDD0FB8E8B48C4E4D07B2DDBFC87F5BD86F7D25AAB6284E3257EDCDF0BF336D9C2E4DE8202353C3DA6D48F3CDB4A6245F986EA43EB458376E2B6B9DA0010303FC5E9A285E46FBF020FED3583CD0390A5883907D9B3941C848179BB201F7EC9846CD09542817194AF3E1E72C717654D497B38A6876EFA07AB88087AAF48234588B367641341D1AA461D5CE9F397BF34527245AB192515A0A2A43EB73EDBB206621ACC13F36042EBDFC6CA45AACAF35099546871FF61D9EB552490EC8B84AC87BE4C88E98B43DAEB59EF4899FF775D6F4BCF3048BA061414FAE6C603EFF7027A910CDA8551D86F7BBAABB5E9794E33C4A71C567E975CB953A850F246

8C26755F9A3279A3C31B1AA6EF244662FE25DAA816582A2EF9D72EFFF2AEDD42D91186550AD032560EE6A79DEFC3BA4CA303FA25A365266361BDCD731AA4316C46B36AE3928B6918B3A86E1133693C2B109FF21C46D61D7A94C69FDF11B307B8376C6901806BEE706A13E3BA139B278A36D9832052DEFDCCBB4209FDABF859E09392546AFF5505884640FA4F4B5385E84F64C9DF71FC04DD1DD3CC33416556837B5ABE3E4A00AE53898898B373CF1C53660E649AA4DDD949D7769E5DCF9AA9FDB4EB4A89867F040607FB88B79BAAD015FEF0E1C0BE66A35FBBB783BC2E551C71E89C92C31786BF5AA173487A5C5386EA64DE03F8126EFEBCE03A8E5EC87ED4A96739665B7EB5AAF410BAED2D63C479AF0DB2BC46933C80A916AF1D3B77E9D1221003756956A921CC7CBF0472A36B9072F049470CBA96F727A11893279219E3D29FD2D75761755B30710E2068405212B03863F66D83273BBF920D51E7E8AFDD22DC7DA1449F1A1C4EB7C6EAFA1A7BDD50AB03C975BAA363B3038BCBA7B92957E5A6DBEFEC7164D4B29C699D3867F4ABEBFEC15A71BA4B3108FC2C99C2A52B5DBD7A48179ED86CAD1E8EF68DBC94FE3739142798AC33061A1B5272DF7FAA427819BB953A350475F26839896F6EABDD20E163363658EA698503525BD614E61CF918463DC88B243E833E585AD0872F3657D3CDCF1347B5EFC1948CAC213C9129F5FD95B717307D87D9810702723933F3B7FA8F3B0C2311E9C25A8724C60D5C4C0EB1BE37B90D39C44C95E2C7AAC2DE44B75B94E2ED3745E523FCA092DEEEF106A4AC9273C0568928AD161B4320DB9746B04700B9C1B79DBD7AF1FEEF079048C0A26CF08DFA2E67965D2200628B202CBDAC03647DCA41F680574DDF588F95699B5ED419FE9ACE84F6118D3CEE2BB78A9C1317EE97FE9A5AFB58C21C6B7103CD45A13E2DCDD1703FFAC465165BBA98DDCC0624200B7353CA751DF05C1956AAB3D57311D3340AA77169EFD2BDCC8C61927ED4E7E4D37986D75109EDE10193561178D71B3CBE87AA1EF3E40A32BBAD0F5B297F2AEC6B1CD646925A017B1A71345583D594647B262FF51B2BBE57B1B339D5B2A0914C89D2D8EA8C36AD545901B10A54438064DC92AC92D5DC66ECE0F435B2E8F6150A9D1CE7577C851B3A0C019871B41EACEEF2ED3162FD414E0A1FE91A9746DEE38FBD1D3605E3C338134E04029DBF43241B902004D692DEAE47342E6B755614EB988F604E28C6CE22837E33405AA37F5BD40003FA39B7040B7251C6DD00327C4BEF7452F36522987A71AB9F8FA605F0842FF252F68299D143ECB0CDDE9E30108623198B23027E7CFA5E410A5DA9BBC7C00C8407646DFA32262A3AFA51FDE11CC225EABD068CA5ED67E320A502809BD08A209602A80DBC489FB160CB5F5A63BA2E49776D7DF7189D431E8C3E1F1D36EAA4

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/ETCJWO+Helvetica cguidfix
/F1.1/ETCJWO+Helvetica renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.5 w
1 J
[
0.010591703
4.2366815
] 0.0052958517 d
/Cs1 SC
0 sc
q
74.0709 44.0709 934.3291 220.8582 rc
140.80869 44.0709 m
140.80869 264.92911 l
207.54648 44.0709 m
207.54648 264.92911 l
274.28427 44.0709 m
274.28427 264.92911 l
341.02206 44.0709 m
341.02206 264.92911 l
407.75986 44.0709 m
407.75986 264.92911 l
474.49765 44.0709 m
474.49765 264.92911 l
541.23547 44.0709 m
541.23547 264.92911 l
607.97327 44.0709 m
607.97327 264.92911 l
674.71106 44.0709 m
674.71106 264.92911 l
741.44885 44.0709 m
741.44885 264.92911 l
808.18665 44.0709 m
808.18665 264.92911 l
874.92444 44.0709 m
874.92444 264.92911 l
941.66223 44.0709 m
941.66223 264.92911 l
S
[
0.0097899064
3.9159627
] 0.0048949532 d
74.0709 78.04908 m
1008.4 78.04908 l
74.0709 112.02727 m
1008.4 112.02727 l
74.0709 146.00545 m
1008.4 146.00545 l
74.0709 179.98364 m
1008.4 179.98364 l
74.0709 213.96182 m
1008.4 213.96182 l
74.0709 247.94 m
1008.4 247.94 l
S
3 w
0 J
[] 0 d
/Cs2 SC
0.21568628 0.49411765 0.72156864 sc
74.0709 170.76572 m
107.4398 215.98744 l
140.80869 204.95023 l
174.17758 244.03711 l
207.54648 237.85274 l
240.91537 210.28951 l
274.28427 211.9127 l
307.65317 209.77933 l
341.02206 215.87933 l
374.39096 155.71025 l
407.75986 216.13223 l
441.12875 204.46291 l
474.49765 201.91893 l
507.86655 168.60118 l
541.23547 132.49869 l
574.60437 116.98105 l
607.97327 92.569298 l
641.34216 84.506378 l
674.71106 81.626175 l
708.07996 79.622528 l
741.44885 79.379349 l
774.81775 76.251793 l
808.18665 70.959084 l
841.55554 72.798553 l
874.92444 74.754868 l
908.29333 73.934502 l
941.66223 76.449188 l
975.03113 80.062599 l
1008.4 80.185265 l
S
Q
q
0 0 1024 283 rc
0 1 -1 0 168.08965 140.91035 cm
/F1.1[ 12 0 0 12 0 0]sf
-111.15352 154.74023 m
(!"#$%#&'\(\)#*\(+,-./%\)#\("&*\('#\(+,#$&\).#\(-#01\(234)[ 9.333984 6.000000 6.673828 3.996094 6.673828 6.673828 6.673828 6.673828 3.333984 3.333984 6.673828 6.673828 3.333984 6.673828 6.673828 6.000000 2.666016 6.000000 6.673828 3.333984 6.673828 3.333984 6.000000 6.673828 6.673828 3.333984 6.673828 6.673828 3.333984 6.673828 6.673828 6.673828 3.996094 6.673828 3.333984 2.666016 6.673828 3.333984 6.000000 6.673828 2.666016 3.333984 3.333984 3.333984 10.669922 0.000000 ] xS
CM
46.327148 40.007423 m
(53)[ 6.673828 0.000000 ] xS
32.979492 73.985603 m
(6553)[ 6.673828 6.673828 6.673828 0.000000 ] xS
32.979492 107.96379 m
(7553)[ 6.673828 6.673828 6.673828 0.000000 ] xS
32.979492 141.94197 m
(8553)[ 6.673828 6.673828 6.673828 0.000000 ] xS
32.979492 175.92017 m
(9553)[ 6.673828 6.673828 6.673828 0.000000 ] xS
26.305664 209.89835 m
(:5553)[ 6.673828 6.673828 6.673828 6.673828 0.000000 ] xS
26.305664 243.87653 m
(:6553)[ 6.673828 6.673828 6.673828 6.673828 0.000000 ] xS
0 J
[] 0 d
66.0709 44.0709 m
74.0709 44.0709 l
70.0709 61.05999 m
74.0709 61.05999 l
66.0709 78.04908 m
74.0709 78.04908 l
70.0709 95.038177 m
74.0709 95.038177 l
66.0709 112.02727 m
74.0709 112.02727 l
70.0709 129.01636 m
74.0709 129.01636 l
66.0709 146.00545 m
74.0709 146.00545 l
70.0709 162.99455 m
74.0709 162.99455 l
66.0709 179.98364 m
74.0709 179.98364 l
70.0709 196.97273 m
74.0709 196.97273 l
66.0709 213.96182 m
74.0709 213.96182 l
70.0709 230.95091 m
74.0709 230.95091 l
66.0709 247.94 m
74.0709 247.94 l
70.0709 264.92911 m
74.0709 264.92911 l
S
505.87833 7.1152344 m
(;$++\)\)#\(&$$&<)[ 9.333984 3.996094 6.673828 6.673828 3.333984 3.333984 6.673828 3.333984 6.673828 3.996094 3.996094 6.673828 0.000000 ] xS
68.2313 25.121485 m
(6)s
/F1.1[ 9 0 0 9 0 0]sf
74.905128 31.145508 m
(5)s
/F1.1[ 12 0 0 12 0 0]sf
134.96909 25.121485 m
(6)s
/F1.1[ 9 0 0 9 0 0]sf
141.64291 31.145508 m
(6)s
/F1.1[ 12 0 0 12 0 0]sf
201.70688 25.121485 m
(6)s
/F1.1[ 9 0 0 9 0 0]sf
208.38071 31.145508 m
(7)s
/F1.1[ 12 0 0 12 0 0]sf
268.44467 25.121485 m
(6)s
/F1.1[ 9 0 0 9 0 0]sf
275.1185 31.145508 m
(8)s
/F1.1[ 12 0 0 12 0 0]sf
335.18246 25.121485 m
(6)s
/F1.1[ 9 0 0 9 0 0]sf
341.85629 31.145508 m
(9)s
/F1.1[ 12 0 0 12 0 0]sf
399.41757 25.121485 m
(6)s
/F1.1[ 9 0 0 9 0 0]sf
406.0914 31.145508 m
(:5)[ 5.005371 0.000000 ] xS
/F1.1[ 12 0 0 12 0 0]sf
466.15536 25.121485 m
(6)s
/F1.1[ 9 0 0 9 0 0]sf
472.82919 31.145508 m
(:6)[ 5.005371 0.000000 ] xS
/F1.1[ 12 0 0 12 0 0]sf
532.89319 25.121485 m
(6)s
/F1.1[ 9 0 0 9 0 0]sf
539.56702 31.145508 m
(:7)[ 5.005371 0.000000 ] xS
/F1.1[ 12 0 0 12 0 0]sf
599.63098 25.121485 m
(6)s
/F1.1[ 9 0 0 9 0 0]sf
606.30481 31.145508 m
(:8)[ 5.005371 0.000000 ] xS
/F1.1[ 12 0 0 12 0 0]sf
666.36877 25.121485 m
(6)s
/F1.1[ 9 0 0 9 0 0]sf
673.0426 31.145508 m
(:9)[ 5.005371 0.000000 ] xS
/F1.1[ 12 0 0 12 0 0]sf
733.10657 25.121485 m
(6)s
/F1.1[ 9 0 0 9 0 0]sf
739.7804 31.145508 m
(65)[ 5.005371 0.000000 ] xS
/F1.1[ 12 0 0 12 0 0]sf
799.84436 25.121485 m
(6)s
/F1.1[ 9 0 0 9 0 0]sf
806.51819 31.145508 m
(66)[ 5.005371 0.000000 ] xS
/F1.1[ 12 0 0 12 0 0]sf
866.58215 25.121485 m
(6)s
/F1.1[ 9 0 0 9 0 0]sf
873.25598 31.145508 m
(67)[ 5.005371 0.000000 ] xS
/F1.1[ 12 0 0 12 0 0]sf
933.31995 25.121485 m
(6)s
/F1.1[ 9 0 0 9 0 0]sf
939.99377 31.145508 m
(68)[ 5.005371 0.000000 ] xS
/F1.1[ 12 0 0 12 0 0]sf
1000.0577 25.121485 m
(6)s
/F1.1[ 9 0 0 9 0 0]sf
1006.7316 31.145508 m
(69)[ 5.005371 0.000000 ] xS
74.0709 36.0709 m
74.0709 44.0709 l
140.80869 36.0709 m
140.80869 44.0709 l
207.54648 36.0709 m
207.54648 44.0709 l
274.28427 36.0709 m
274.28427 44.0709 l
341.02206 36.0709 m
341.02206 44.0709 l
407.75986 36.0709 m
407.75986 44.0709 l
474.49765 36.0709 m
474.49765 44.0709 l
541.23547 36.0709 m
541.23547 44.0709 l
607.97327 36.0709 m
607.97327 44.0709 l
674.71106 36.0709 m
674.71106 44.0709 l
741.44885 36.0709 m
741.44885 44.0709 l
808.18665 36.0709 m
808.18665 44.0709 l
874.92444 36.0709 m
874.92444 44.0709 l
941.66223 36.0709 m
941.66223 44.0709 l
1008.4 36.0709 m
1008.4 44.0709 l
107.4398 40.0709 m
107.4398 44.0709 l
174.17758 40.0709 m
174.17758 44.0709 l
240.91537 40.0709 m
240.91537 44.0709 l
307.65317 40.0709 m
307.65317 44.0709 l
374.39096 40.0709 m
374.39096 44.0709 l
441.12875 40.0709 m
441.12875 44.0709 l
507.86655 40.0709 m
507.86655 44.0709 l
574.60437 40.0709 m
574.60437 44.0709 l
641.34216 40.0709 m
641.34216 44.0709 l
708.07996 40.0709 m
708.07996 44.0709 l
774.81775 40.0709 m
774.81775 44.0709 l
841.55554 40.0709 m
841.55554 44.0709 l
908.29333 40.0709 m
908.29333 44.0709 l
975.03113 40.0709 m
975.03113 44.0709 l
S
/F1.1[ 12 0 0 12 0 0]sf
368.13486 269.65057 m
(!"#$%#&'\(+=\('#\(;>?\(\)#\(@#A$B.C#*\(.*\(1B*/\).#\("&*\('#\(\)&&CD@$++\)\)#)[ 9.333984 6.000000 6.673828 3.996094 6.673828 6.673828 6.673828 6.673828 3.333984 6.673828 9.996094 3.333984 6.673828 6.673828 3.333984 9.333984 8.003906 8.666016 3.333984 3.333984 6.673828 3.333984 6.673828 6.673828 6.673828 3.996094 6.673828 2.666016 6.000000 6.673828 6.673828 3.333984 2.666016 6.673828 3.333984 3.333984 6.673828 6.673828 6.000000 3.333984 2.666016 6.673828 3.333984 6.000000 6.673828 6.673828 3.333984 6.673828 6.673828 3.333984 3.333984 6.673828 6.673828 6.000000 3.996094 6.673828 3.996094 6.673828 6.673828 3.333984 3.333984 0.000000 ] xS
2 J
1008.4 44.0709 m
1008.4 264.92911 l
74.0709 264.92911 l
74.0709 44.0709 l
1008.4 44.0709 l
h
S
ep
end
%%Trailer
%%EOF
